<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Federico Agostini</title><link>https://agos95.github.io/</link><atom:link href="https://agos95.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Federico Agostini</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate><image><url>https://agos95.github.io/media/icon_hu060e70c8979b0db0439a3e535935f0ed_1055846_512x512_fill_lanczos_center_3.png</url><title>Federico Agostini</title><link>https://agos95.github.io/</link></image><item><title>Example Talk</title><link>https://agos95.github.io/talk/example-talk/</link><pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate><guid>https://agos95.github.io/talk/example-talk/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click on the &lt;strong>Slides&lt;/strong> button above to view the built-in slides feature.
&lt;/div>
&lt;/div>
&lt;p>Slides can be added in a few ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create&lt;/strong> slides using Wowchemy&amp;rsquo;s &lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">&lt;em>Slides&lt;/em>&lt;/a> feature and link using &lt;code>slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong> an existing slide deck to &lt;code>static/&lt;/code> and link using &lt;code>url_slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Embed&lt;/strong> your slides (e.g. Google Slides) or presentation video on this page using &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">shortcodes&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Further event details, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">page elements&lt;/a> such as image galleries, can be added to the body of this page.&lt;/p></description></item><item><title>Beyond Transformers: fault type detection in maintenance tickets with Kernel Methods, Boost Decision Trees and Neural Networks</title><link>https://agos95.github.io/publication/campese-agostini_ijcnn2022/</link><pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate><guid>https://agos95.github.io/publication/campese-agostini_ijcnn2022/</guid><description/></item><item><title>A post processing pipeline to prepare raw data for machine learning algorithms in cardiac magnetic resonance imaging</title><link>https://agos95.github.io/publication/agostini-campese_esc2022-pipeline/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://agos95.github.io/publication/agostini-campese_esc2022-pipeline/</guid><description>&lt;h3 id="funding-acknowledgements">Funding Acknowledgements&lt;/h3>
&lt;p>Type of funding sources: None.&lt;/p>
&lt;h3 id="background">Background&lt;/h3>
&lt;p>Artificial Intelligence is an emergent tool in clinical practice for post processing of medical images. Machine Learning (ML) pipelines are created for data of interest extraction and algorithm application. A common issue in data extraction is represented by noisy datasets, like those of CMR studies, characterized by multiple images, acquired by different techniques, axis orientation and contrast timing.
Purpose&lt;/p>
&lt;p>A ML pipeline for extraction of LGE images from raw DICOM data is presented. Additionally, steps for normalization of image number and automatically heart localization are outlined.
Methods and Results&lt;/p>
&lt;p>642 consecutive CMR studies were analyzed.&lt;/p>
&lt;p>Pipeline, Part 1. By looking at the metadata in raw files, ‘SequenceName’ tag was used to discard cine images, ‘ScanningSequence’ tag to select Gradient Recall and Inversion Recovery techniques (Inversion Time &amp;gt; 100 ms), ‘SequenceVariant’ tag to discard Steady State images (See Fig. 1). Orientation of the major axis was computed and ‘Axial’ or ‘Coronal’ images removed. Scans were grouped together by image orientation (requesting a min and max number of elements per group) and only the group with the largest number of files was selected. Finally, DICOMs were grouped by image shape (demanding a min number of elements), and only the series with the highest resolution was retained. Then, for each subject, the extracted series consists of a 3D-array (N,H,W), with N number of slices, and (H,W) image resolution. The attributes were not homogeneous between subjects.&lt;/p>
&lt;p>Pipeline, Part 2. Given a desired final number of slices and resolution, the 3D-array was reshaped through a spline interpolation. In order to have a focus on the heart, a Region of Interest (ROI) extractor was implemented, based on a YOLO network for object detection. The network was applied on all the slices (Fig. 2); then the images were cropped by keeping the largest bounding box. This step allowed us to remove the background by only selecting the relevant ROIs. To manage the data more easily, images were saved as a NumPy Array, while other useful Dicom metadata (e.g. weight, age, …) were stored using the json standard.&lt;/p>
&lt;p>At the end of the ML pipeline, images can be reduced to a common resolution and forwarded to ML algorithms.&lt;/p>
&lt;p>By using this pipeline, a great amount of information not needed for LGE analysis can be discarded, granting a significant reduction in terms of data storage. In our series, the original dataset extended for about 200 GB; by requesting 10 slices per subject with a resolution of 128 by 128 pixels (also extracting heart ROI) the final dimension was reduced to 108 MB.&lt;/p>
&lt;h3 id="conclusions">Conclusions&lt;/h3>
&lt;p>In this work, we presented a post-processing pipeline for CRM images and LGE analysis. Given in input raw CRM the pipeline is able to (i) remove unuseful data, (ii) extract heart ROIs storing also Dicom metadata, (iii) normalize slices and image resolution, and (iv) store the processed CRM into ready-format for ML techniques.&lt;/p></description></item><item><title>Myocardial fibrosis detection using kernel methods: preliminary results from a cardiac magnetic resonance study</title><link>https://agos95.github.io/publication/agostini-campese_esc2022-analysis/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://agos95.github.io/publication/agostini-campese_esc2022-analysis/</guid><description>&lt;h3 id="funding-acknowledgements">Funding Acknowledgements&lt;/h3>
&lt;p>Type of funding sources: None.&lt;/p>
&lt;h3 id="background">Background&lt;/h3>
&lt;p>Asserting the presence of myocardial fibrosis from cardiac magnetic resonance (CMR) images is sometimes a complex task, even for experienced cardiac imagers. The application of artificial intelligence models to the evaluation process can be of help for enhancing diagnostic accuracy.
Purpose&lt;/p>
&lt;p>In this work, we tested two different Machine Learning (ML) algorithms, namely kernel methods with Support Vector Machine (SVM) and Convolutional Neural Network (CNN) to a cohort of consecutive CMR studies. The goal was a binary classification task, aimed to identify myocardial scar (present/absent).&lt;/p>
&lt;h3 id="methods">Methods&lt;/h3>
&lt;p>Dataset consisted of 642 CMR scans, equally divided into healthy and fibrosis-affected. Raw DICOM files were preprocessed through an automated pipeline, in order to retrieve only short-axis post contrast acquisitions. Heart regions were then individuated using a YOLO network, in order to remove the background and focus only on data of interest. Finally, for each subject 10 slices were extracted through interpolation, and all images resized to 128 by 128 pixels. Dataset was divided into training and test sets, with proportions 80%‐20%.
Results&lt;/p>
&lt;p>The first analysis was based on state-of-the-art CNN models, pre-trained on the ImageNet dataset. The training of the models was optimized using &amp;ldquo;reduce learning rate on the plateau&amp;rdquo;, &amp;ldquo;early stopping&amp;rdquo;, and standard data augmentation techniques. Experiments showed that CNNs-based models led to poor performances.&lt;/p>
&lt;p>The second attempt was based on kernel methods and SVM. Before feeding the input to the algorithm, dimensionality reduction was implemented using a Principal Component Analysis retaining 99% of the variance. The resulting 335 features were passed as input to an SVM, testing different kernels (e.g. Linear, Gaussian, Cossim). Models were trained and optimized using a Grid Search with a 5-fold Cross-Validation. The best SVM configuration displayed an accuracy of 68% and a sensitivity of 60%.&lt;/p>
&lt;p>Improved results could be obtained using state-of-the-art Multiple Kernel Learning algorithms, leading to 71% accuracy and sensitivity of 72% (with a 12% increment with respect to the previous algorithm).&lt;/p>
&lt;h3 id="conclusions">Conclusions&lt;/h3>
&lt;p>Our preliminary results of this study showed the possibility for a ML system to learn to identify myocardial fibrosis, directly from raw CMR images. In particular, kernel methods were able to achieve good and significant results, even with small amounts of data, suggesting room for improvement. In future works, we plan to furtherly explore kernel methods to improve the results and to build an end-to-end solution for cardiac imagers.&lt;/p></description></item></channel></rss>